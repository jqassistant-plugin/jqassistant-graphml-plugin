<jqassistant-rules
    xmlns="http://schema.jqassistant.org/rule/v1.10">

    <concept id="test:DeclaredMembers">
        <description>A type and its declarations</description>
        <cypher><![CDATA[
            MATCH
              (t:Class)-[r:DECLARES]->(m)
            RETURN
              t, r as rel, m
        ]]></cypher>
        <report type="graphml"/>
    </concept>

    <concept id="test:DeclaredMembersWithVirtualRelation">
        <description>A type and its declarations</description>
        <cypher><![CDATA[
            MATCH
              (t:Class)-[r:DECLARES]->(m)
            RETURN
              t, {role: "relationship", type:"DECLARES", startNode:startNode(r), endNode:endNode(r), properties: { name : m.name }} as rel, m
        ]]></cypher>
        <report type="graphml"/>
    </concept>

    <concept id="test:ArtifactsWithTypesAndMembersAsNestedSubGraphs">
        <description>A artifact with type and members as nested subgraphs</description>
        <cypher><![CDATA[
			MATCH
			  (a:Artifact)-[:CONTAINS]->(t:Class)-[:DECLARES]->(m:Method)
			OPTIONAL MATCH
			  (m)-[i:INVOKES]->(:Method)
			WITH
			  a, t, collect(m) as methods, collect(i) as invocations
			WITH
			  a, collect({ role: "graph", parent: t, nodes: methods, relationships: invocations }) as typesPerArtifact
			RETURN
			  {role: "graph", parent: a, nodes: typesPerArtifact}
         ]]></cypher>
        <report type="graphml"/>
    </concept>


    <concept id="test:DeclaredMembersWithVirtualNode">
        <description>A type with methods as subgraph</description>
        <cypher><![CDATA[
           	MATCH
				(m:Method)
			RETURN
				{role: "node", properties: {totalCyclomaticComplexity : sum(m.cyclomaticComplexity)}, labels: ["Metrics", "CyclomaticComplexity"] }
        ]]></cypher>
        <report type="graphml"/>
    </concept>

    <concept id="test:RedundantNodesAndRelations">
        <description>A type with methods as subgraph</description>
        <cypher><![CDATA[
           	MATCH
			  (t:Class:Type)-[d:DECLARES]->(c:Method:Constructor)
			RETURN
			  t as t1, t as t2, d as d1, d as d2, c as c1, c as c2
        ]]></cypher>
        <report type="graphml"/>
    </concept>
</jqassistant-rules>
